grammar Definition

	rule expression # this is where math comes from.
		complex_quantity " "* arithmetic_operators " "* expression+ / complex_quantity / parenthetical_expression
	end
	
	rule parenthetical_expression
		open_paren expression close_paren
	end

	rule complex_quantity
		exponentiated / quantity / (open_paren ( exponentiated / quantity ) close_paren)
	end
	
	rule quantity # these are the sorts of things that math can be performed on.
		text / number / (open_paren (text / number) close_paren)
	end
	
	rule exponentiated # hey look exponents! "m^2", "m^-2"
		quantity " "? exponent_operators " "? number
	end

	rule arithmetic_operators
		" "* (adders / multipliers)
	end
	
	rule open_paren
		" "* "(" " "*
	end

	rule close_paren
		" "* ")" " "*
	end
	
	rule exponent_operators
		"^" <OperatorNode> / "**" <OperatorNode>
	end
	
	rule adders
		"+" <OperatorNode> / "-" <OperatorNode>
	end
	
	rule multipliers
		"*" <OperatorNode> / "ร" <OperatorNode> / "/" <OperatorNode> / "รท" <OperatorNode>
	end
	
	rule text
		" "* [a-zA-Z]+ <TextNode> # outlawing underscores. just add it to the character class to renable.
	end

	rule number
		" "* "-"? " "* [0-9]+ "."? [0-9]* <NumericNode>
  end
end